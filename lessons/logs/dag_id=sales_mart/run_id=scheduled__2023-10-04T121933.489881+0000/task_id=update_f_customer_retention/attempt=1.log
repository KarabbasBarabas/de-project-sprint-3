[2023-10-07 12:25:54,855] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: sales_mart.update_f_customer_retention scheduled__2023-10-04T12:19:33.489881+00:00 [queued]>
[2023-10-07 12:25:54,863] {taskinstance.py:1159} INFO - Dependencies all met for <TaskInstance: sales_mart.update_f_customer_retention scheduled__2023-10-04T12:19:33.489881+00:00 [queued]>
[2023-10-07 12:25:54,863] {taskinstance.py:1356} INFO - 
--------------------------------------------------------------------------------
[2023-10-07 12:25:54,864] {taskinstance.py:1357} INFO - Starting attempt 1 of 1
[2023-10-07 12:25:54,865] {taskinstance.py:1358} INFO - 
--------------------------------------------------------------------------------
[2023-10-07 12:25:54,874] {taskinstance.py:1377} INFO - Executing <Task(PostgresOperator): update_f_customer_retention> on 2023-10-04 12:19:33.489881+00:00
[2023-10-07 12:25:54,878] {standard_task_runner.py:52} INFO - Started process 2591 to run task
[2023-10-07 12:25:54,880] {standard_task_runner.py:79} INFO - Running: ['airflow', 'tasks', 'run', 'sales_mart', 'update_f_customer_retention', 'scheduled__2023-10-04T12:19:33.489881+00:00', '--job-id', '78', '--raw', '--subdir', 'DAGS_FOLDER/sprint3.py', '--cfg-path', '/tmp/tmp9n71i2ux', '--error-file', '/tmp/tmpisuywz3h']
[2023-10-07 12:25:54,881] {standard_task_runner.py:80} INFO - Job 78: Subtask update_f_customer_retention
[2023-10-07 12:25:54,921] {task_command.py:369} INFO - Running <TaskInstance: sales_mart.update_f_customer_retention scheduled__2023-10-04T12:19:33.489881+00:00 [running]> on host d964b2b568e5
[2023-10-07 12:25:54,967] {taskinstance.py:1569} INFO - Exporting the following env vars:
AIRFLOW_CTX_DAG_EMAIL=student@example.com
AIRFLOW_CTX_DAG_OWNER=student
AIRFLOW_CTX_DAG_ID=sales_mart
AIRFLOW_CTX_TASK_ID=update_f_customer_retention
AIRFLOW_CTX_EXECUTION_DATE=2023-10-04T12:19:33.489881+00:00
AIRFLOW_CTX_TRY_NUMBER=1
AIRFLOW_CTX_DAG_RUN_ID=scheduled__2023-10-04T12:19:33.489881+00:00
[2023-10-07 12:25:54,975] {base.py:68} INFO - Using connection ID 'postgresql_de' for task execution.
[2023-10-07 12:25:54,980] {sql.py:315} INFO - Running statement: insert into mart.f_customer_retention(
    period_name 
    ,period_id 
    ,item_id 
    ,new_customers_count 
    ,returning_customers_count
    ,refunded_customer_count 
    ,new_customers_revenue 
    ,returning_customers_revenue 
    ,customers_refunded  
)

select
    'weekly' as period_name 
    ,t.period_id 
    ,t.item_id 
    ,t.new_customers_count 
    ,t.returning_customers_count
    ,t.refunded_customer_count 
    ,t.new_customers_revenue 
    ,t.returning_customers_revenue 
    ,t.customers_refunded 
from(
    select
        --'weekly' as period_name
        q.period_id
        ,q.item_id
        ,sum(case when cnt_sales = 1 then 1 else 0 end) as new_customers_count
        ,sum(case when cnt_sales > 1 then 1 else 0 end) as returning_customers_count
        ,sum(case when cnt_rej >= 1 then 1 else 0 end) as refunded_customer_count
        ,sum(case when cnt_sales = 1 then payment_amount else 0 end ) as new_customers_revenue
        ,sum(case when cnt_sales > 1 then payment_amount else 0 end ) as returning_customers_revenue
        ,sum(cnt_rej) as customers_refunded
    from(
        select
            dc.first_day_of_week as period_id
            ,fs.item_id
            ,fs.customer_id
            ,count(*) as cnt_sales
            ,sum(
                case
                    when fs.status = 'refunded' then 1
                    else 0
                end
            ) as cnt_rej
            ,sum(payment_amount) as payment_amount
        from mart.f_sales fs  
        left join mart.d_calendar dc on fs.date_id = dc.date_id
        group by dc.first_day_of_week
                ,fs.item_id
                ,fs.customer_id
    ) q
    group by q.period_id
            ,q.item_id
) t , parameters: {'date': ('{{ ds }}',)}
[2023-10-07 12:25:54,985] {sql.py:324} INFO - Rows affected: 24
[2023-10-07 12:25:54,996] {taskinstance.py:1395} INFO - Marking task as SUCCESS. dag_id=sales_mart, task_id=update_f_customer_retention, execution_date=20231004T121933, start_date=20231007T122554, end_date=20231007T122554
[2023-10-07 12:25:55,013] {local_task_job.py:156} INFO - Task exited with return code 0
[2023-10-07 12:25:55,037] {local_task_job.py:273} INFO - 0 downstream tasks scheduled from follow-on schedule check
